{
	"info": {
		"name": "Karneval",
		"_postman_id": "63b480e4-dbe2-7ddb-07cd-e0f29bbc38c9",
		"description": "# Introduction\nWhat does your API do?\n\n# Overview\nThings that the developers should know about\n\n# Authentication\nWhat is the preferred way of using the API?\n\n# Error Codes\nWhat errors and status codes can a user expect?\n\n# Rate limit\nIs there a limit to the number of requests an user can send?",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "userrelated",
			"item": [
				{
					"name": "Register a user",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Successfield true on statuscode 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.eql(true);",
									"});",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\":\"test@gmail.com\",\n  \"password\":\"password\"\n}"
						},
						"url": {
							"raw": "http://localhost:3000/register",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"register"
							]
						},
						"description": "Register request"
					},
					"response": [
						{
							"id": "1e9241e2-51de-44dd-9666-28a48e6e1a49",
							"name": "Register a user",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\":\"user\",\n  \"password\":\"password\"\n}"
								},
								"url": {
									"raw": "http://localhost:3000/register",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"register"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "text",
							"header": [
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": "Options that are desired for the connection"
								},
								{
									"key": "Content-Length",
									"value": "51",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Thu, 09 Nov 2017 12:01:27 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "ETag",
									"value": "W/\"33-jT7XvUMvUICLSOi/X62wjA5G4EI\"",
									"name": "ETag",
									"description": "An identifier for a specific version of a resource, often a message digest"
								},
								{
									"key": "X-Powered-By",
									"value": "Express",
									"name": "X-Powered-By",
									"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
								}
							],
							"cookie": [],
							"responseTime": 180,
							"body": "{\"success\":true,\"message\":\"You are now registered\"}"
						}
					]
				},
				{
					"name": "Fail to register a user",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Successfield false on statuscode 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.eql(false);",
									"});",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\":\"test@gmail.com\",\n  \"password\":\"password\"\n}"
						},
						"url": {
							"raw": "http://localhost:3000/register",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"register"
							]
						},
						"description": "Register request"
					},
					"response": [
						{
							"id": "3e699b2f-e2df-4565-affd-365cae039a81",
							"name": "Register a user",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\":\"user\",\n  \"password\":\"password\"\n}"
								},
								"url": {
									"raw": "http://localhost:3000/register",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"register"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "text",
							"header": [
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": "Options that are desired for the connection"
								},
								{
									"key": "Content-Length",
									"value": "51",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Thu, 09 Nov 2017 12:01:27 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "ETag",
									"value": "W/\"33-jT7XvUMvUICLSOi/X62wjA5G4EI\"",
									"name": "ETag",
									"description": "An identifier for a specific version of a resource, often a message digest"
								},
								{
									"key": "X-Powered-By",
									"value": "Express",
									"name": "X-Powered-By",
									"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
								}
							],
							"cookie": [],
							"responseTime": 180,
							"body": "{\"success\":true,\"message\":\"You are now registered\"}"
						}
					]
				},
				{
					"name": "Email Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.globals.set(\"accessToken\", pm.response.json().accessToken);",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Successfield true on statuscode 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.eql(true);",
									"});",
									"",
									"pm.test(\"Body must contain accessToken\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"accessToken\");",
									"});",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\":\"test@gmail.com\",\n  \"password\":\"password\"\n}"
						},
						"url": {
							"raw": "http://localhost:3000/login/email",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"login",
								"email"
							]
						},
						"description": "Login with email"
					},
					"response": [
						{
							"id": "26c025ee-603c-4211-b54e-ec1f27d1bf62",
							"name": "Email Login",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\":\"user\",\n  \"password\":\"password\"\n}"
								},
								"url": {
									"raw": "http://localhost:3000/login/email",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"login",
										"email"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "text",
							"header": [
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": "Options that are desired for the connection"
								},
								{
									"key": "Content-Length",
									"value": "193",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Thu, 09 Nov 2017 12:06:51 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "ETag",
									"value": "W/\"c1-0lqyrhRnwAK+F+XU+aYzPKYaT84\"",
									"name": "ETag",
									"description": "An identifier for a specific version of a resource, often a message digest"
								},
								{
									"key": "X-Powered-By",
									"value": "Express",
									"name": "X-Powered-By",
									"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
								}
							],
							"cookie": [],
							"responseTime": 250,
							"body": "{\"success\":true,\"message\":\"Successfully logged in\",\"accessToken\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InVzZXIiLCJpYXQiOjE1MTAyMjkyMTF9.0Ht-w2nzThhNCqbQvAdQAkABlH93BwS92TPe9DHZAuE\"}"
						}
					]
				},
				{
					"name": "API token \"hello\"",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\":\"test@gmail.com\",\n  \"password\":\"wrongpassword\"\n}"
						},
						"url": {
							"raw": "http://localhost:3000/api/hello",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"hello"
							]
						}
					},
					"response": [
						{
							"id": "752ff08e-9811-4305-a25d-78716812b8ff",
							"name": "API token \"hello\"",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:3000/api/hello",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"hello"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "html",
							"_postman_previewtype": "text",
							"header": [
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": "Options that are desired for the connection"
								},
								{
									"key": "Content-Length",
									"value": "12",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "text/html; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Thu, 09 Nov 2017 12:39:00 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "ETag",
									"value": "W/\"c-Lve95gjOVATpfV8EL5X4nxwjKHE\"",
									"name": "ETag",
									"description": "An identifier for a specific version of a resource, often a message digest"
								},
								{
									"key": "X-Powered-By",
									"value": "Express",
									"name": "X-Powered-By",
									"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
								}
							],
							"cookie": [],
							"responseTime": 35,
							"body": "Hello World!"
						}
					]
				},
				{
					"name": "Bad email login",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Must yield unauthorized\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\":\"test@gmail.com\",\n  \"password\":\"wrongpassword\"\n}"
						},
						"url": {
							"raw": "http://localhost:3000/login/email",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"login",
								"email"
							]
						}
					},
					"response": []
				},
				{
					"name": "Password Reset",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test('Status code is 200', function() {",
									"    pm.response.to.have.status(200)",
									"})",
									"",
									"pm.test('Body has to contain an token', function() {",
									"    pm.expect(pm.response.text()).to.include(\"passwordToken\")",
									"    var jsonData = JSON.parse(pm.response.text())",
									"    postman.setEnvironmentVariable('passwordToken', jsonData.passwordToken)",
									"})"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\":\"test@gmail.com\"\n}"
						},
						"url": {
							"raw": "http://localhost:3000/login/forgotpassword",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"login",
								"forgotpassword"
							]
						},
						"description": "Tests for resetting password"
					},
					"response": []
				},
				{
					"name": "Bad password reset change password",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test('Successfield should be false', function() {",
									"    var jsonData = pm.response.json()",
									"    pm.expect(jsonData.success).to.eql(false)",
									"})"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"test@gmail.com\",\n\t\"passwordToken\": \"not correct token\",\n\t\"password\": \"not right password\"\n}"
						},
						"url": {
							"raw": "http://localhost:3000/login/resetpassword",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"login",
								"resetpassword"
							]
						},
						"description": "Sends a request that should fail"
					},
					"response": []
				},
				{
					"name": "Password reset change password",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"test@gmail.com\",\n\t\"passwordToken\": \"{{passwordToken}}\",\n\t\"password\": \"asdasd\"\n}"
						},
						"url": {
							"raw": "http://localhost:3000/login/resetpassword",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"login",
								"resetpassword"
							]
						},
						"description": "Change the password using the passwordToken"
					},
					"response": []
				},
				{
					"name": "Email Login new password",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.globals.set(\"accessToken\", pm.response.json().accessToken);",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Successfield true on statuscode 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.success).to.eql(true);",
									"});",
									"",
									"pm.test(\"Body must contain accessToken\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"accessToken\");",
									"});",
									"",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\":\"test@gmail.com\",\n  \"password\":\"asdasd\"\n}"
						},
						"url": {
							"raw": "http://localhost:3000/login/email",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"login",
								"email"
							]
						},
						"description": "Login with email"
					},
					"response": [
						{
							"id": "d7e19c1b-0cac-4525-875f-904e881c0c12",
							"name": "Email Login",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\":\"user\",\n  \"password\":\"password\"\n}"
								},
								"url": {
									"raw": "http://localhost:3000/login/email",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"login",
										"email"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "text",
							"header": [
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": "Options that are desired for the connection"
								},
								{
									"key": "Content-Length",
									"value": "193",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Thu, 09 Nov 2017 12:06:51 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "ETag",
									"value": "W/\"c1-0lqyrhRnwAK+F+XU+aYzPKYaT84\"",
									"name": "ETag",
									"description": "An identifier for a specific version of a resource, often a message digest"
								},
								{
									"key": "X-Powered-By",
									"value": "Express",
									"name": "X-Powered-By",
									"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
								}
							],
							"cookie": [],
							"responseTime": 250,
							"body": "{\"success\":true,\"message\":\"Successfully logged in\",\"accessToken\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InVzZXIiLCJpYXQiOjE1MTAyMjkyMTF9.0Ht-w2nzThhNCqbQvAdQAkABlH93BwS92TPe9DHZAuE\"}"
						}
					]
				}
			]
		}
	]
}