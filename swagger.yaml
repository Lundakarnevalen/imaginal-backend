---
  swagger: "2.0"
  info: 
    version: "1.0.0"
    title: "Imaginalkarneval backend"
  consumes: 
    - "application/json"
  produces: 
    - "application/json"
  paths: 
    /register: 
      post:
        description: "Register to the karneval"
        parameters:
          - in: "body"
            name: "register"
            description: "register"
            schema:
              type: "object"
              required:
                - "email"
                - "password"
              properties:
                email:
                  type: "string"
                password:
                  type: "string"
        responses: 
          "200":
            description: "Message indicating success"
            schema: 
              type: "object"
              properties:
                success:
                  type: "boolean"
                  description: "Success values"
                message:
                  type: "string"
                  description: "Success message"
          "400":
            description: "Message indicating failure"
            schema: 
              type: "object"
              properties:
                success:
                  type: "boolean"
                  description: "Failure values"
                message:
                  type: "string"
                  description: "Failure message"
    /login/email: 
      post:
        description: "Log in"
        parameters:
          - in: "body"
            name: "register"
            description: "register"
            schema:
              type: "object"
              required:
                - "email"
                - "password"
              properties:
                email:
                  type: "string"
                password:
                  type: "string"
        responses: 
          "200":
            description: "Message indicating success"
            schema: 
              type: "object"
              properties:
                success:
                  type: "boolean"
                  description: "Success values"
                message:
                  type: "string"
                  description: "Success message"
                accessToken:
                  type: "string"
                  description: "Access token used for subsequent API calls"
          "401":
            description: "Failed to log in due to incorrect credentials"
            schema: 
              type: "object"
              properties:
                success:
                  type: "boolean"
                  description: "Failure values"
                message:
                  type: "string"
                  description: "Failure message"
          "500":
            description: "Failed to log in due to internal server error"
            schema: 
              type: "object"
              properties:
                success:
                  type: "boolean"
                  description: "Failure values"
                message:
                  type: "string"
                  description: "Failure message"
    /api/hello: 
      post:
        description: "Test route to try access token"
        parameters:
          - in: "header"
            name: "Authorization"
            type: "string"
            required: true
        responses: 
          "200":
            description: "Hello world"
            schema: 
              type: "object"
              properties:
                success:
                  type: "boolean"
                  description: "Success values"
                message:
                  type: "string"
                  description: "Success message"
          "401":
            description: "Unauthorized"
            schema: 
              type: "object"
              properties:
                success:
                  type: "boolean"
                  description: "Failure values"
                message:
                  type: "string"
                  description: "Failure message"
    /api/users: 
      get:
        description: "Get all users, requires admin"
        parameters:
          - in: "header"
            name: "Authorization"
            type: "string"
            required: true
        responses: 
          "200":
            description: "Successfully fetched all users"
            schema: 
              type: "object"
              properties:
                success:
                  type: "boolean"
                  description: "Success values"
                users:
                  type: "array"
                  description: "Array of all users"
                  items:
                    type: "object"
          "401":
            description: "Unauthorized"
            schema: 
              type: "object"
              properties:
                success:
                  type: "boolean"
                  description: "Failure values"
                message:
                  type: "string"
                  description: "Failure message"
    /api/users/{email}: 
      get:
        description: "Get user defined by email"
        parameters:
          - in: "header"
            name: "Authorization"
            type: "string"
            required: true
          - in: "path"
            name: "email"
            type: "string"
            required: true
        responses: 
          "200":
            description: "Successfully fetched user"
            schema: 
              type: "object"
              properties:
                success:
                  type: "boolean"
                  description: "Success values"
                user:
                  type: "object"
                  description: "User information"
          "401":
            description: "Unauthorized"
            schema: 
              type: "object"
              properties:
                success:
                  type: "boolean"
                  description: "Failure values"
                message:
                  type: "string"
                  description: "Failure message"
    /api/section: 
      get:
        description: "Get users section priorities"
        parameters:
          - in: "header"
            name: "Authorization"
            type: "string"
            required: true
        responses: 
          "200":
            description: "Successfully fetched priorities"
            schema: 
              type: "object"
              properties:
                success:
                  type: "boolean"
                  description: "Success values"
                sectionPriorities:
                  type: "array"
                  description: "Array of section priorities in order of prio"
                  items:
                    type: "object"
          "401":
            description: "Unauthorized"
            schema: 
              type: "object"
              properties:
                success:
                  type: "boolean"
                  description: "Failure values"
                message:
                  type: "string"
                  description: "Failure message"
          "500":
            description: "Internal server error"
            schema: 
              type: "object"
              properties:
                success:
                  type: "boolean"
                  description: "Failure values"
                message:
                  type: "string"
                  description: "Failure message"
      post:
        description: "Get users section priorities"
        parameters:
          - in: "header"
            name: "Authorization"
            type: "string"
            required: true
          - in: "body"
            name: "sections"
            schema:
              type: "object"
              required:
                - "sectionPriorities"
              properties:
                sectionPriorities:
                  type: "array"
                  description: "Array of section priorities in prio order, will override exisiting ones"
                  items:
                    type: "string"
        responses: 
          "200":
            description: "Successfully fetched priorities"
            schema: 
              type: "object"
              properties:
                success:
                  type: "boolean"
                  description: "Success values"
                sectionPriorities:
                  type: "array"
                  description: "Array of section priorities in order of prio"
                  items:
                    type: "object"
          "401":
            description: "Unauthorized"
            schema: 
              type: "object"
              properties:
                success:
                  type: "boolean"
                  description: "Failure values"
                message:
                  type: "string"
                  description: "Failure message"
          "500":
            description: "Internal server error"
            schema: 
              type: "object"
              properties:
                success:
                  type: "boolean"
                  description: "Failure values"
                message:
                  type: "string"
                  description: "Failure message"
